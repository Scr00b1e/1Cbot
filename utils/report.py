import base64
import requests

def get_report1c():
    url = "http://localhost/telegram/hs/tg/report"
    username = "–ê–¥–º–∏–Ω"
    password = ""

    credentials = f"{username}:{password}".encode("utf-8")
    encoded_credentials = base64.b64encode(credentials).decode("utf-8")

    headers = {
        "Authorization": f"Basic {encoded_credentials}",
        "Content-Type": "application/json"
    }

    try:
        response = requests.get(url, headers=headers)
        if response.status_code == 200:
            try:
                data = response.json()
                if not isinstance(data, list):
                    return f"‚ö†Ô∏è –û–∂–∏–¥–∞–ª—Å—è —Å–ø–∏—Å–æ–∫, –Ω–æ –ø–æ–ª—É—á–µ–Ω–æ: `{type(data).__name__}`\n\n```{data}```"

                table = "üìã *–û—Ç—á—ë—Ç –∏–∑ 1–°:*\n"
                table += "```\n{:25} {:10}\n".format("–ö–ª–∏–µ–Ω—Ç", "–°—É–º–º–∞")
                table += "-" * 38 + "\n"

                for row in data:
                    table += "{:25} {:10.2f}\n".format(
                        row.get("–ö–ª–∏–µ–Ω—Ç", ""), row.get("–°—É–º–º–∞", 0)
                    )

                table += "```"
                return table

            except Exception as e:
                return f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–æ—Ä–µ JSON: {str(e)}\n\n–û—Ç–≤–µ—Ç –æ—Ç 1–°:\n{response.text}"
        else:
            return f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç 1–°: {response.status_code}\n\n{response.text}"

    except Exception as e:
        return f"üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ 1–°:\n{str(e)}"
